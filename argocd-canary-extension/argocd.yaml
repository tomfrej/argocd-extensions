apiVersion: v1
kind: Secret
metadata:
  name: argocd-secret
  namespace: argocd
  labels:
    helm.sh/chart: argo-cd-7.4.2
    app.kubernetes.io/name: argocd-secret
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "v2.12.0"
data:
  LDAP_HOST: dHZuLWFkOjEzODk=
  LDAP_PASSWORD: RktSXEN3PVVhR2FebiQ+cTI=
  LDAP_USER: U0EtVFZOX2F3c19sZGFw
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    helm.sh/chart: argo-cd-7.4.2
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "v2.12.0"
    appname: argo-cd
data:
  admin.enabled: "false"
  extensions.enabled: "true"
  extensions.resources: |
    - name: argocd-canary-extension
      namespace: argocd
  extension.config: |-
    extensions:
      - name: argocd-metrics-extension
        backend:
          services:
            - url: http://argocd-server-metrics.argocd.svc.cluster.local:8083
      - name: argocd-canary-extension
        backend:
          services:
          - url: http://loadtester.infra.svc.cluster.local:80
          proxy:
          - path: /gate/open
            service: argocd-canary-extension
            method: POST
            headers:
            - name: Content-Type
              value: application/json
  dex.config: |
    connectors:
      - type: ldap
        id: ldap
        name: LDAP
        config:
          host: $LDAP_HOST
          insecureNoSSL: false
          insecureSkipVerify: true
          startTLS: true
          #rootCA: /etc/dex/ldap.ca
          # rootCAData: ( base64 encoded PEM file )
          bindDN: $LDAP_USER
          bindPW: $LDAP_PASSWORD
          usernamePrompt: WMAD AD SSO (email WBD login)
          userSearch:
            baseDN: OU=Identities,OU=ProductionAD,DC=wmad,DC=warnermedia,DC=com
            filter: "(objectClass=person)"
            username: userPrincipalName
            idAttr: distinguishedName
            emailAttr: mail
            nameAttr: displayName
          groupSearch:
            #baseDN: OU=Grupy Security,OU=TVN,OU=Korporacja,OU=TVN,OU=Groups,OU=Corporate,DC=dci,DC=discovery,DC=com
            baseDN: OU=Grupy Security,OU=TVN,OU=TVN,OU=Groups,OU=ProductionAD,DC=wmad,DC=warnermedia,DC=com
            filter: "(objectClass=group)"
            userMatchers:
            - userAttr: distinguishedName
              groupAttr: member
            #  filter: ""
            nameAttr: name
  exec.enabled: "true"
  accounts.jenkins: apiKey
  accounts.cloud_admin: apiKey
  accounts.github: apiKey
  accounts.nuvi: apiKey
  accounts.manhattan-api: apiKey
  resource.customizations: |
    networking.k8s.io/Ingress:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        return hs
  resource.customizations.ignoreDifferences.apps_Deployment: |
    jqPathExpressions:
      - '.spec.template.spec.containers[].resources.requests.cpu'
  resource.exclusions: |
    - apiGroups:
        - kyverno.io
      kinds:
        - AdmissionReport
        - BackgroundScanReport
        - ClusterAdmissionReport
        - ClusterBackgroundScanReport
      clusters:
        - '*'
  resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
    jqPathExpressions:
    - '.webhooks[]?.clientConfig.caBundle'
  statusbadge.enabled: "true"
  statusbadge.url: https://argocd.uat.k8s.int.tvn.pl/
  ui.bannercontent: ArgoCD UAT EKS Online
  url: https://argocd.uat.k8s.int.tvn.pl
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
  namespace: argocd
  labels:
    helm.sh/chart: argo-cd-7.4.2
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "v2.12.0"
data:
  server.insecure: "true"
  server.enable.proxy.extension: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
  labels:
    helm.sh/chart: argo-cd-7.4.2
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "v2.12.0"
data:
  context: |
    argocdUrl: https://argocd.uat.k8s.int.tvn.pl
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-rbac-cm
  namespace: argocd
  labels:
    helm.sh/chart: argo-cd-7.4.2
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "v2.12.0"
data:
  policy.default: role:''
  policy.matchMode: glob
  scopes: '[groups, email]'
  policy.csv: |

    p, role:admin, extensions, invoke, *, allow

    # Default privileges
    p, role:default, clusters, get, *, allow
    p, role:default, repositories, get, *, allow
    p, role:default, certificates, get, *, allow
    p, role:default, gpgkeys, get, *, allow
    p, role:default, exec, create, */*, allow

    # Privileges for TVN Developers
    p, role:tvn-developer, applications, *, developers-sandbox/*, allow
    p, role:tvn-developer, applications, *, zoltan/*, allow
    p, role:tvn-developer, applications, *, manhattan/*, allow
    p, role:tvn-developer, applications, *, shared-components/*, allow
    p, role:tvn-developer, applications, *, tvn-ecommerce/*, allow
    p, role:tvn-developer, applications, *, playerlabs/*, allow
    p, role:tvn-developer, applications, *, pomoc/*, allow
    p, role:tvn-developer, projects, get, developers-sandbox, allow
    p, role:tvn-developer, projects, get, zoltan, allow
    p, role:tvn-developer, projects, get, manhattan, allow
    p, role:tvn-developer, projects, get, shared-components, allow
    p, role:tvn-developer, projects, get, tvn-ecommerce, allow
    p, role:tvn-developer, projects, get, playerlabs, allow
    p, role:tvn-developer, projects, get, pomoc, allow

    # Privileges Big Data
    p, role:bigdata, applications, *, bigdata/*, allow
    p, role:bigdata, projects, get, bigdata, allow
    p, role:bigdata, applications, *, herring/*, allow
    p, role:bigdata, projects, get, herring, allow
    p, role:bigdata, applications, *, tvn24recommendation/*, allow
    p, role:bigdata, projects, get, tvn24recommendation, allow
    p, role:bigdata, applications, *, categorization/*, allow
    
    # Privileges Big Data ReadOnly
    p, role:bigdata-ro, applications, get, bigdata/*, allow
    p, role:bigdata-ro, projects, get, bigdata, allow
    p, role:bigdata-ro, applications, get, herring/*, allow
    p, role:bigdata-ro, projects, get, herring, allow
    p, role:bigdata-ro, applications, get, tvn24recommendation/*, allow
    p, role:bigdata-ro, projects, get, tvn24recommendation, allow

    # Privileges for ITTouch
    p, role:ittouch-admin, applications, *, payments-tvn/*, allow
    p, role:ittouch-admin, applications, *, fundation-tvn/*, allow
    p, role:ittouch-admin, applications, *, tvnmedia/*, allow
    p, role:ittouch-admin, projects, get, payments-tvn, allow
    p, role:ittouch-admin, projects, get, fundation-tvn, allow
    p, role:ittouch-admin, projects, get, tvnmedia, allow

    # Privilages for Nuvi
    p, role:nuvi, applications, *, nuvi/*, allow
    p, role:nuvi, projects, get, nuvi, allow

    # Privilages for Tech Titans Team ReadOnly
    p, role:titans-ro, applications, get, playerlabs/*, allow
    p, role:titans-ro, applications, get, pomoc/*, allow
    p, role:titans-ro, projects, get, playerlabs, allow
    p, role:titans-ro, projects, get, pomoc, allow

    # Privileges for API accounts
    p, role:jenkins, applications, *, manhattan/*, allow
    p, role:jenkins, projects, get, manhattan, allow
    p, role:github, applications, *, zoltan/*, allow
    p, role:github, projects, get, zoltan, allow
    p, role:github, applications, *, backstage/*, allow
    p, role:github, projects, get, backstage, allow
    p, role:nuvi-api, applications, *, nuvi/*, allow
    p, role:nuvi-api, projects, get, nuvi, allow
    p, role:manhattan-api, applications, *, manhattan/*, allow
    p, role:manhattan-api, projects, get, manhattan, allow

    g, TVN EKS Administrators, role:admin
    g, TVN BD RW, role:bigdata
    g, TVN BD RW, role:default
    g, TVN AWS DEVOPS, role:nuvi
    g, TVN AWS DEVOPS, role:default
    g, TVN ArgoCD Stage Dev, role:tvn-developer
    g, TVN ArgoCD Stage Dev, role:default
    g, Marcin.Bara@wbdcontractor.com, role:ittouch-admin
    g, Marcin.Bara@wbdcontractor.com, role:default
    g, piotr.uchman@wbdcontractor.com, role:bigdata
    g, piotr.uchman@wbdcontractor.com, role:default
    g, Kamil.Moscicki@wbd.com, role:bigdata
    g, Kamil.Moscicki@wbd.com, role:default
    g, Katarzyna.Orzechowska@wbdcontractor.com, role:bigdata
    g, Katarzyna.Orzechowska@wbdcontractor.com, role:default
    g, michal.jaron@wbdcontractor.com, role:bigdata-ro
    g, michal.jaron@wbdcontractor.com, role:default
    g, bartlomiej.twardowski@wbdcontractor.com, role:bigdata-ro
    g, bartlomiej.twardowski@wbdcontractor.com, role:default
    g, tomasz.kogut@wbdcontractor.com, role:bigdata-ro
    g, tomasz.kogut@wbdcontractor.com, role:default
    g, dominik.ryzko@wbdcontractor.com, role:bigdata-ro
    g, dominik.ryzko@wbdcontractor.com, role:default
    g, dawid.bialy@wbdcontractor.com, role:admin
    g, joanna.misztal-radecka@wbdcontractor.com, role:bigdata-ro
    g, joanna.misztal-radecka@wbdcontractor.com, role:default
    g, kamil.peciak@wbdcontractor.com, role:titans-ro
    g, kamil.peciak@wbdcontractor.com, role:default
    g, mateusz.kowalski@wbdcontractor.com, role:titans-ro
    g, mateusz.kowalski@wbdcontractor.com, role:default

    # API Users
    g, cloud_admin, role:admin
    g, jenkins, role:jenkins
    g, github, role:github
    g, nuvi, role:nuvi-api
    g, manhattan-api, role:manhattan-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    helm.sh/chart: argo-cd-7.4.2
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "v2.12.0"
  annotations:
    haproxy.org/cr-backend: "haproxy/default-backend"
spec:
  ingressClassName: haproxy
  rules:
    - host: argocd.uat.k8s.int.tvn.pl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80

